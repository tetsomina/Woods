#######################################
#            _     _       _          
#   _____  _| |__ | | ____| |_ __ ___ 
#  / __\ \/ / '_ \| |/ / _` | '__/ __|
#  \__ \>  <| | | |   < (_| | | | (__ 
#  |___/_/\_\_| |_|_|\_\__,_|_|  \___|
#######################################

#
# wm independent hotkeys
#

# terminal emulator
super + Return
	termite

# open terminal in the same directory of focused window
#super + shift + Return
#	termite -cd "`xcwd`"

# Open ranger in same directory as focused window
super + backslash
	termite -e "ranger '`xcwd`'"

# start external monitor; then toggle it
super + alt + space
	~/.config/sxhkd/extmonsetup.sh

# program launcher
super + e
	withlock LOCK-launcher termite --name "applauncher" -e launcher
	#zsh ~/.config/rofi/launchers-git/launcher.sh

# Flash currently focused window
#super + ctrl + w
#	nc_flash_window

# pick *moji
super + shift + m
	withlock LOCK-moji termite --name "splatmoji" -e "'zsh -ic ~/.config/sxhkd/moji'"

# switch windows
super + shift + w
	withlock LOCK-window termite --name "window" -e "~/.config/sxhkd/window-select"

# get window title
super + alt + w
	notify-send -u normal "$(xdotool getactivewindow getwindowname)"

# fzf bluetooth menu
super + alt + b
	withlock LOCK-bluetooth termite --name "bluetooth" -e "~/.config/sxhkd/fzf-bluetooth"

# fzf notes/todo
super + space
	withlock LOCK-todo termite --name "fzfnotes" -e "~/.config/sxhkd/fzf-notes"

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd && notify-send -u normal "Sxhkd reloaded"

# toggle polybar
super + shift + b
	~/.config/sxhkd/smooth_bsptoppad.sh &

# draw terminal
super + button2
	~/.config/sxhkd/draw_term &

# teleport cursor
super + alt + c
	xdotool mousemove --window $(bspc query -N -n) --polar 0 0
	

# Print screen
Print
	~/.config/sxhkd/prtscr

super + Print
	~/.config/sxhkd/prtregion

# brightness up
XF86MonBrightnessUp
	zsh ~/.config/sxhkd/bright up

# Brightness down
XF86MonBrightnessDown
	zsh ~/.config/sxhkd/bright down

# volume up
XF86AudioRaiseVolume 
	zsh ~/.config/sxhkd/vol pulse up

# volume down
XF86AudioLowerVolume
	zsh ~/.config/sxhkd/vol pulse down

# toggle mute
XF86AudioMute
	zsh ~/.config/sxhkd/vol pulse mute
# mic volume up
super + XF86AudioRaiseVolume 
	zsh ~/.config/sxhkd/vol pulsemic up

# mic volume down
super + XF86AudioLowerVolume
	zsh ~/.config/sxhkd/vol pulsemic down

# mic toggle mute
super + XF86AudioMute
	zsh ~/.config/sxhkd/vol pulsemic mute

# play last/ restart audio
XF86AudioPrev
	playerctl previous

# Play next audio
XF86AudioNext
	playerctl next

# toggle play/pause audio
XF86AudioPlay
	playerctl play-pause

# stop audio
XF86AudioStop
	playerctl stop

# "Caffeine" enable/disable
super + p
	zsh ~/.config/sxhkd/.caffeine.sh 

# Toggle touchpad
#super + F5
#	zsh ~/.config/sxhkd/toggletouchpad.sh

# fzf-file search and directory opener
super + z
	withlock LOCK-find ~/.config/sxhkd/fzf-find
	#python ~/.config/sxhkd/rofi-files

# fzf-google
super + shift + z
	withlock LOCK-google termite --name "google" -e "~/.config/sxhkd/goog.sh"

# display sxhkd bindings
super + a
	withlock LOCK-sxhkd termite --name "sxhkdhelp" -e "~/.config/sxhkd/sxhkd_help"

# interactive cheatsheet
super + shift + h
	withlock LOCK-navi termite --name "navi" -e "\"navi --fzf-overrides '--reverse  --color fg:7,bg:-1,hl:6,fg+:6,bg+:-1,hl+:6 --color info:2,prompt:1,spinner:5,pointer:5,marker:3,header:8'\""

# edit sxhkd bindings
super + shift + a
	termite -e "zsh -c 'nvim ~/.config/sxhkd/sxhkdrc'"

# bashmount
super + u
	termite --name bashmount -e "zsh -ic bashmount"
	#zsh ~/.config/sxhkd/udiskie

# record selected part of screen in mp4
super + ctrl + r
	mp4

# record seleceted part of screen in gif
super + ctrl + shift + r
	gif

# toggle swallowing
super + shift + s
	xdo id | pidswallow -t
	#bspc query --nodes --node focused | pidswallow -t

# toggle picom
super + shift + p
	zsh ~/.config/sxhkd/togglepicom

# Greenclip
super + x
	withlock LOCK-clip zsh ~/.config/sxhkd/fzf-clip
	#zsh ~/.config/sxhkd/greenclip

# toggle scratchpad terminal
super + d
	tdrop -m -w 69% -h 60% -x 15% -y 46 -s Dropdown termite --name dropdown 
	#-e "tmux attach -dt Dropdown"
 
# toggle scratchpad of current selected window
super + shift + d
	tdrop -m -w 69% -h 60% -x 15% -y 46 current

# clear current dropdown window (not terminal, the one grabbed from above command)
super + ctrl + d
	tdrop --clear current; \
	notify-send -u normal -t 3000 " Current dropdown window cleared"	
	#dunstify -u normal -t 3000 -r 4812 " Current dropdown window cleared"

# Outer padding script
super + {minus, equal}
	zsh ~/.config/sxhkd/padding.sh {-,+}

# adjust gap size
super + shift + {minus,equal}
	bspc config -d focused window_gap $(( $(bspc config -d focused window_gap) {-,+} 8 ))

# reset gaps/outer padding
super + BackSpace
	bspc config -d focused top_padding 0; \
	bspc config -d focused right_padding 0; \
	bspc config -d focused left_padding 0; \
	bspc config -d focused bottom_padding 0; \
	bspc config -d focused window_gap 16

# Smart move script; should rotate windows?
super + shift + {h,j,k,l}
	zsh ~/.config/sxhkd/bspwm_smart_move {west,south,north,east}

# Color picker
super + shift + c
	farge

# Whats playing?
super + j
	~/.config/sxhkd/spotnotif

# Toggle notifications
super + n
	~/.config/sxhkd/old_scripts/toggledunst &

#
#  bspwm hotkeys
#

# quit/restart bspwm
super + shift + e
	withlock LOCK-power termite --name "powermenu" -e "./.config/sxhkd/fzf-power"

# restart bspwm
super + shift + r
	bspc wm -r

# close
super + shift + q
	bspc node -c

# kill
super + alt + q
	bspc node -k

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest

# circulate windows forward or backwards
super + c; {f,b}
	bspc node @/ -C {forward,backward}

# flip windows vertically or horizontally
super + f;{v,h}
	bspc node @/ -F {vertical,horizontal}

# rotate windows by certain amounts
super + r;{s,m,l}
	bspc node @/ -R {90,180,270}
#
# Hide/ unhide windows
#

# hide window
super + h; h
	bspc node -g hidden

# list and unhide selected window
super + h; u
	withlock LOCK-bsphidwins termite --name "bsphidwins" -e "~/.config/sxhkd/fzf-bsphidwins"
	#bspc node $(bspc query -N -n .hidden | tail -n1) -g hidden=off

# Hide all windows on current desktop
super + h; a
	~/.config/sxhkd/hideall

# unhide all hidden windows
super + h; shift + a
	~/.config/sxhkd/unhideall

# list hidden windows
#super + h; l
#	zsh ~/.config/sxhkd/hidwindowlist

#
# state/flags
#

# set the window state
super + s;{t,p,f,a}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
#super + {_,shift + }{Left,Down,Up,Right}
#	bspc node -{f,s} {west,south,north,east}

# focus the node in the given direction (multimonitor)
super + {_,shift + }{Left,Down,Up,Right}
    mode={f,s}; \
    direction={west,south,north,east}; \
    monitor=$(bspc query -M --names -m $direction); \
    if bspc query -N -n $direction -m focused > /dev/null; then \
        bspc node -$mode $direction; \
    else; \
        if [ $mode = "f" ]; then \
            if bspc query -N -d ${monitor}:focused > /dev/null; then \
                bspc node -$mode $direction; \
            else; \
                bspc monitor -f $direction; \
            fi; \
        else; \
            bspc node -m $direction --follow; \
        fi; \
    fi

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {q,w}
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
#super + {_,shift + }{1-9,0}
#	bspc {desktop -f,node -d} focused:'^{1-9,10}'

# focus or send to the given desktop (multimonitor)
super + {_,shift + }{1-9,0}
    monitor=$(bspc query -M --names -m focused); \
    bspc {desktop -f,node -d} $monitor:'^'{1-9,10}

# Swap the contents of two desktops
super + alt + {0-9}
	target={10,1-9}; \
	bspc node "@focused:/" -s "@^$target:/" \
	    || bspc node "@focused:/" -d "^$target" \
	    || bspc node "@^$two:/" -d focused

# Swap monitors
super + {less,greater}
	bspc monitor --focus {prev,next}

#
# preselect
#

# preselect the direction
super + ctrl + {Left,Down,Up,Right}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
super + alt + {Left,Down,Up,Right}
	~/.config/sxhkd/6gkresize.sh {west,south,north,east}

# move a floating window
super + alt + {h,j,k,l}
	bspc node -v {-20 0,0 20,0 -20,20 0}
#
# Tabbing
#

# Tab focused window
super + t; t
	bsptab tab focused

# Add windows to tabbed
super + t; {h,j,k,l}
	bsptab add {west,south,north,east}.local focused

# Add all windows to tabbed
super + t; a
	bsptab add-all focused

# Remove windows from tabbed
super + t; {_,shift + }r
	bsptab remove{_,-all} focused

# Move tab to desktop
super + t; {1-9,0}
	bsptab remove-desktop focused {1-9,0}

# Add next new window to tabbed
super + t; {_,shift + }n
	bsptab add-{next,new} focused

# Stop auto-tabbing windows
super + t; s
	bsptab stop-add-new

#
# Layouts
#

# Set layout for current desktop to tall
super + l; t
	bsp-layout set tall; \
	notify-send -u normal -t 3000 " Tall layout enabled"	
	#dunstify -u normal -t 3000 -r 8821 " Tall layout enabled"

# Set layout for current desktop to wide
super + l; w
	bsp-layout set wide; \
	notify-send -u normal -t 3000 " Wide layout enabled"	
	#dunstify -u normal -t 3000 -r 8821 " Wide layout enabled"	

# Set layout for current desktop to even
super + l; e
	bsp-layout set even; \
	notify-send -u normal -t 3000 " Even layout enabled"
	#dunstify -u normal -t 3000 -r 8821 " Even layout enabled"

# Set layout for current desktop to tiled
super + l; i
	bsp-layout set tiled; \
	notify-send -u normal -t 3000 " Tiled layout enabled"
	#dunstify -u normal -t 3000 -r 8821 " Tiled layout enabled"

# Set layout for current desktop to float
super + l; f
	~/.config/sxhkd/bspfloat &; \
	notify-send -u normal -t 3000 " Float layout enabled"
	#dunstify -u normal -t 3000 -r 8821 " Float layout enabled"

# Whats the current layout?
super + l; g
	~/.config/sxhkd/query_bsplayout
	#dunstify -t 3000 -u normal -r 8821 "Current layout: $(bsp-layout get $(bspc query -D -d --names))"

# Remove layout for focused desktop
super + l; r
	bsp-layout remove; \
	~/.config/sxhkd/killbspfloat; \
	notify-send -u normal -t 3000 " Layout removed"
	#dunstify -u normal -t 3000 -r 8821 " Layout removed"

#
# Clight controls
#

# recalibrate backlight
super + v; c
	busctl --expect-reply=false --user call org.clight.clight /org/clight/clight org.clight.clight Capture "bb" false false; \
	notify-send -t 3000 -u normal "Backlight recalibrated"
	#dunstify -r 811 -t 3000 -u normal "Backlight recalibrated"

# pause screen dimmer
super + v; d
	~/.config/sxhkd/toggle_dimmer.sh
	#busctl --expect-reply=false --user call org.clight.clight /org/clight/clight org.clight.clight Inhibit "b" true; \
	#notify-send -t 3000 -u normal "Screen dimmer paused"
	#dunstify -t 3000 -r 811 -u normal "Screen dimmer paused"

# pause backlight calibration
super + v; b
	~/.config/sxhkd/toggle_backcalib.sh
	#busctl --expect-reply=false --user set-property org.clight.clight /org/clight/clight/Conf org.clight.clight.Conf NoAutoCalib "b" true; \
	#notify-send -u normal -t 3000 "Backlight calibration paused"
	#dunstify -u normal -t 3000 -r 811 "Backlight calibration paused"
	
# toggle redshift
super + v; g
	~/.config/sxhkd/toggle_redshift.sh

# toggle "Movie mode" (disables all of the above and restores them when deactivating Movie mode)
super + v; m
	~/.config/sxhkd/toggle_clight_movie_mode.sh
